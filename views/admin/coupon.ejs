
<%- include ('../../layout/adminlayout/header.ejs') %>



<style>
    input.error {
        border-color: red;
    }

    label.error {
        color: red;
    }

    .select2-container--default .select2-selection--multiple {
        border: none;
        padding: 0.4375rem 0.875rem;
    }

    .form-floating-select2 .select2-container--default .select2-selection--multiple .select2-selection__rendered {
        padding: 0;
    }

    .select2-container--default .select2-selection--multiple .select2-selection__choice {
        background-color: #e9ecef;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        padding: 2px 6px;
        margin-right: 5px;
        margin-top: 2px;
    }

    .offer-card {
        transition: all 0.3s ease;
        border: none;
        border-radius: 15px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .offer-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
    }

    .offer-card .card-body {
        padding: 1.5rem;
    }

    .offer-card .card-title {
        color: #333;
        font-size: 1.4rem;
        font-weight: 700;
        margin-bottom: 1rem;
        border-bottom: 2px solid #f0f0f0;
        padding-bottom: 0.5rem;
    }

    .offer-card .card-text p {
        margin-bottom: 0.5rem;
        font-size: 0.9rem;
    }

    .offer-card .card-text strong {
        color: #555;
    }

    .offer-card .discount {
        font-size: 1.1rem;
        color: #e74c3c;
        font-weight: 700;
    }

    .offer-card .status-badge {
        padding: 0.25rem 0.5rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
    }

    .offer-card .status-badge.active {
        background-color: #2ecc71;
        color: white;
    }

    .offer-card .status-badge.inactive {
        background-color: #e74c3c;
        color: white;
    }

    .offer-card .publish-date {
        font-size: 0.8rem;
        color: #7f8c8d;
        margin-top: 1rem;
    }

    .offer-card .offer-type {
        color: #3498db;
        font-weight: 600;
    }
    .modal-backdrop {
  z-index: 1040 !important;
}

.modal {
  z-index: 1050 !important;
}

.swal2-container {
  z-index: 1060 !important;
}

.swal2-popup {
  z-index: 1070 !important;
}

.swal2-backdrop-show {
  z-index: 1060 !important;
}

    @media (max-width: 768px) {
        .row-cols-md-3 {
            row-gap: 1rem;
        }
    }
</style>

<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-5DDHKGP" height="0" width="0"
    style="display: none; visibility: hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<!-- Layout wrapper -->
<div class="layout-wrapper layout-content-navbar  ">
  <div class="layout-container">







    <!-- Menu -->

    <aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme">


      <div class="app-brand demo ">
        <a href="index.html" class="app-brand-link">
          <span class="app-brand-logo demo me-1">
            <span style="color:var(--bs-primary);">
              <svg width="30" height="24" viewBox="0 0 250 196" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" clip-rule="evenodd"
                  d="M12.3002 1.25469L56.655 28.6432C59.0349 30.1128 60.4839 32.711 60.4839 35.5089V160.63C60.4839 163.468 58.9941 166.097 56.5603 167.553L12.2055 194.107C8.3836 196.395 3.43136 195.15 1.14435 191.327C0.395485 190.075 0 188.643 0 187.184V8.12039C0 3.66447 3.61061 0.0522461 8.06452 0.0522461C9.56056 0.0522461 11.0271 0.468577 12.3002 1.25469Z"
                  fill="currentColor" />
                <path opacity="0.077704" fill-rule="evenodd" clip-rule="evenodd"
                  d="M0 65.2656L60.4839 99.9629V133.979L0 65.2656Z" fill="black" />
                <path opacity="0.077704" fill-rule="evenodd" clip-rule="evenodd"
                  d="M0 65.2656L60.4839 99.0795V119.859L0 65.2656Z" fill="black" />
                <path fill-rule="evenodd" clip-rule="evenodd"
                  d="M237.71 1.22393L193.355 28.5207C190.97 29.9889 189.516 32.5905 189.516 35.3927V160.631C189.516 163.469 191.006 166.098 193.44 167.555L237.794 194.108C241.616 196.396 246.569 195.151 248.856 191.328C249.605 190.076 250 188.644 250 187.185V8.09597C250 3.64006 246.389 0.027832 241.935 0.027832C240.444 0.027832 238.981 0.441882 237.71 1.22393Z"
                  fill="currentColor" />
                <path opacity="0.077704" fill-rule="evenodd" clip-rule="evenodd"
                  d="M250 65.2656L189.516 99.8897V135.006L250 65.2656Z" fill="black" />
                <path opacity="0.077704" fill-rule="evenodd" clip-rule="evenodd"
                  d="M250 65.2656L189.516 99.0497V120.886L250 65.2656Z" fill="black" />
                <path fill-rule="evenodd" clip-rule="evenodd"
                  d="M12.2787 1.18923L125 70.3075V136.87L0 65.2465V8.06814C0 3.61223 3.61061 0 8.06452 0C9.552 0 11.0105 0.411583 12.2787 1.18923Z"
                  fill="currentColor" />
                <path fill-rule="evenodd" clip-rule="evenodd"
                  d="M12.2787 1.18923L125 70.3075V136.87L0 65.2465V8.06814C0 3.61223 3.61061 0 8.06452 0C9.552 0 11.0105 0.411583 12.2787 1.18923Z"
                  fill="white" fill-opacity="0.15" />
                <path fill-rule="evenodd" clip-rule="evenodd"
                  d="M237.721 1.18923L125 70.3075V136.87L250 65.2465V8.06814C250 3.61223 246.389 0 241.935 0C240.448 0 238.99 0.411583 237.721 1.18923Z"
                  fill="currentColor" />
                <path fill-rule="evenodd" clip-rule="evenodd"
                  d="M237.721 1.18923L125 70.3075V136.87L250 65.2465V8.06814C250 3.61223 246.389 0 241.935 0C240.448 0 238.99 0.411583 237.721 1.18923Z"
                  fill="white" fill-opacity="0.3" />
              </svg>
            </span>
          </span>
          <span class="app-brand-text demo menu-text fw-semibold ms-2">Materio</span>
        </a>

        <a href="javascript:void(0);" class="layout-menu-toggle menu-link text-large ms-auto">
          <i class="menu-toggle-icon d-xl-block align-middle"></i>
        </a>
      </div>

      <div class="menu-inner-shadow"></div>



      <ul class="menu-inner py-1">
       
        

       
        <li class="menu-item active open">
          <a href="javascript:void(0);" class="menu-link menu-toggle">
            <i class='menu-icon tf-icons ri-shopping-bag-3-line'></i>
            <div data-i18n="woodnwonder">woodnwonder</div>
          </a>
          <ul class="menu-sub">
            <li class="menu-item ">
              <a href="/admin/dashboard" class="menu-link">
                <div data-i18n="Dashboard">Dashboard</div>
              </a>
            </li>
            <li class="menu-item ">
              <a href="javascript:void(0);" class="menu-link menu-toggle">
                <div data-i18n="Products">Products</div>
              </a>
              <ul class="menu-sub">
                <li class="menu-item ">
                  <a href="/admin/product" class="menu-link">
                    <div data-i18n="Product List">Product List</div>
                  </a>
                </li>
                <li class="menu-item">
                  <a href="/admin/addProduct" class="menu-link">
                    <div data-i18n="Add Product">Add Product</div>
                  </a>
                </li>
              </ul>
            </li>
            <li class="menu-item">
              <a href="javascript:void(0);" class="menu-link menu-toggle">
                <div data-i18n="Category">Category</div>
              </a>
              <ul class="menu-sub">
                <li class="menu-item">
                  <a href="/admin/category" class="menu-link">
                    <div data-i18n="List all category">List all category</div>
                  </a>
                </li>
              </ul>
            </li>
            <li class="menu-item">
              <a href="javascript:void(0);" class="menu-link menu-toggle">
                <div data-i18n="Order">Order</div>
              </a>
              <ul class="menu-sub">
                <li class="menu-item">
                  <a href="/admin/orders" class="menu-link">
                    <div data-i18n="Order List">Order List</div>
                  </a>
                </li>

              </ul>
            </li>
            <li class="menu-item">
              <a href="javascript:void(0);" class="menu-link menu-toggle">
                <div data-i18n="Customer">Customer</div>
              </a>
              <ul class="menu-sub">
                <li class="menu-item">
                  <a href="/admin/customers" class="menu-link">
                    <div data-i18n="All Customers">All Customers</div>
                  </a>
                </li>
              </ul>
            </li>
            <li class="menu-item ">
              <a href="javascript:void(0);" class="menu-link menu-toggle">
                <div data-i18n="Offers">Offers</div>
              </a>
              <ul class="menu-sub">

                <li class="menu-item  ">
                  <a href="/admin/offers" class="menu-link">
                    <div data-i18n="Product Offers">Product Offers</div>
                  </a>
                </li>
                <li class="menu-item  ">
                  <a href="/admin/offers/category" class="menu-link">
                    <div data-i18n="Category Offers">Category Offers</div>
                  </a>
                </li>
              </ul>
            </li>
            <li class="menu-item active open ">
              <a href="javascript:void(0);" class="menu-link menu-toggle">
                <div data-i18n="Coupons Management">Coupons Management</div>
              </a>
              <ul class="menu-sub">

                <li class="menu-item active ">
                  <a href="/admin/coupons" class="menu-link">
                    <div data-i18n="Coupen">Coupen</div>
                  </a>
                </li>
              </ul>
            </li>
            <li class="menu-item">
              <a href="javascript:void(0);" class="menu-link menu-toggle">
                <div data-i18n="Sales Report">Sales Report</div>
              </a>
              <ul class="menu-sub">

                <li class="menu-item">
                  <a href="/admin/salesreport" class="menu-link">
                    <div data-i18n="Report">Report</div>
                  </a>
                </li>
              </ul>
            </li>

          </ul>
        </li>
      </ul>





    </aside>
    <!-- / Menu -->



    <!-- Layout container -->
    <div class="layout-page">






      <nav
        class="layout-navbar container-xxl navbar navbar-expand-xl navbar-detached align-items-center bg-navbar-theme"
        id="layout-navbar">









        <div class="layout-menu-toggle navbar-nav align-items-xl-center me-4 me-xl-0   d-xl-none ">

        </div>


    






      </nav>


      <div class="content-wrapper">



        <div class="container-xxl flex-grow-1 container-p-y">



    <div class="card">
        <div class="card-header">
            <h5 class="mb-0">COUPONS</h5>
            <div class="d-flex justify-content-between align-items-center row pt-4 gap-4 gap-md-0">
                <div class="col-md-4 product_status"></div>
                <div class="col-md-4 product_category"></div>
                <div class="col-md-4 product_stock"></div>
            </div>
        </div>
        <div class="card-datatable table-responsive">
            <div id="DataTables_Table_0_wrapper" class="dataTables_wrapper dt-bootstrap5 no-footer">
                <div class="card-header d-flex border-top rounded-0 flex-wrap py-0 pb-5 pb-md-0">
                    <div class="me-5 ms-n2">
                    </div>
                    <div
                        class="d-flex justify-content-start justify-content-md-end align-items-baseline">
                        <div
                            class="dt-action-buttons d-flex align-items-start align-items-md-center justify-content-sm-center gap-4 pt-0">
                            <div class="dt-buttons btn-group flex-wrap d-flex pt-4 pb-4">
                                <button type="button" class="btn btn-primary waves-effect waves-light"
                                    data-bs-toggle="modal" data-bs-target="#addCoupon">
                                    <span>
                                        <i class="ri-add-line ri-16px me-0 me-sm-1_5"></i>
                                        <span class="d-none d-sm-inline-block">Add Coupon</span>
                                    </span>
                                </button>
                            </div>

                        </div>
                    </div>
                </div>


                <div class="row row-cols-1 row-cols-md-3 g-4 mb-6">
                    <% coupons.forEach((coupon)=> { %>
                        <div class="col">
                            <div class="offer-card card h-100">
                                <div class="card-body">
                                    <h5 class="card-title">
                                        <%=coupon.couponId %>
                                    </h5>
                                    <div class="card-text">
                                        <p class="description"><strong>Description:</strong>
                                            <%=coupon.description %>
                                        </p>
                                        <p class="discount"><strong>Discount:</strong>
                                            <%=coupon.discount %>%
                                        </p>
                                        <p class="status"><strong>Status:</strong> <span
                                                class="status-badge ">
                                                <%=coupon.is_active %>
                                            </span></p>
                                        <p class="expire-date"><strong>Expire Date:</strong>
                                            <%=coupon.expiryDate %>
                                        </p>
                                        <p class="max-purchase-amount"><strong>Max Purchase Amount:</strong>
                                            <%=coupon.min_purchase_amount %>
                                        </p>
                                        <p class="max-amount"><strong>Max Amount:</strong>
                                            <%=coupon.max_amount %>
                                        </p>
                                    </div>
                                    <a href="#" class="btn btn-primary" data-bs-toggle="modal"
                                        data-bs-target="#editCoupon<%=coupon._id%>">
                                        Edit
                                        <i class="icon-edit"></i>
                                    </a>
                                    <button class="btn btn-danger delete-coupon"
                                    data-coupon-id="<%=coupon._id%>">
                                        Delete
                                        <i class="icon-trash"></i>
                                    </button>
                                </div>

                            </div>

                        </div>
                       <%})%>
                </div>
            </div>
        </div>
    </div>









                <div class="modal fade" id="addCoupon" tabindex="-1" aria-labelledby="addCouponLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered modal-simple modal-add-new-cc">
                        <div class="modal-content">
                            <div class="modal-body p-0">
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                <div class="text-center mb-6">
                                    <p>Add New Coupon</p>
                                </div>
                
                                <form id="addNewCouponForm" class="row g-5">
                                    <div class="col-12">
                                        <div class="input-group input-group-merge">
                                            <div class="form-floating form-floating-outline">
                                                <input id="couponId" name="couponId" class="form-control" type="text" placeholder="Coupon ID" >
                                                <label class="errMsg" for="couponId">Coupon ID</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <div class="form-floating form-floating-outline">
                                            <input type="number" id="discount" name="discount" class="form-control" placeholder="Discount" >
                                            <label class="errMsg" for="discount">Discount</label>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <div class="form-floating form-floating-outline">
                                            <textarea id="description" name="description" class="form-control" placeholder="Description" ></textarea>
                                            <label class="errMsg" for="description">Description</label>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <div class="form-floating form-floating-outline">
                                            <input type="date" id="expiryDate" name="expiryDate" class="form-control" >
                                            <label class="errMsg" for="expiryDate">Expiry Date</label>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <div class="form-floating form-floating-outline">
                                            <input type="number" id="min_purchase_amount" name="min_purchase_amount" class="form-control" placeholder="Minimum Purchase Amount" >
                                            <label class="errMsg" for="min_purchase_amount">Minimum Purchase Amount</label>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <div class="form-floating form-floating-outline">
                                            <input type="number" id="max_amount" name="max_amount" class="form-control" placeholder="Maximum Amount">
                                            <label class="errMsg" for="max_amount">Maximum Amount</label>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <div class="form-floating form-floating-outline">
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" id="is_active" name="is_active" checked>
                                                <label class="form-check-label" for="is_active">Active</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-12 text-center">
                                        <button type="submit" class="btn btn-primary me-3 waves-effect waves-light">Submit</button>
                                        <button type="reset" class="btn btn-outline-secondary btn-reset waves-effect" data-bs-dismiss="modal" aria-label="Close">Cancel</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                <% coupons.forEach((coupon)=> { %>
                    <div class="modal fade editmodal" id="editCoupon<%=coupon._id%>" tabindex="-1" aria-labelledby="editCouponLabel<%=coupon._id%>" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered modal-simple modal-edit-cc">
                            <div class="modal-content">
                                <div class="modal-body p-0">
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    <div class="text-center mb-6">
                                        <p>Edit Coupon</p>
                                    </div>
                    
                                   <form id="editCouponForm<%=coupon._id%>" class="edit-coupon-form row g-5" data-coupon-id="<%=coupon._id%>">
                                        <div class="col-12">
                                            <div class="input-group input-group-merge">
                                                <div class="form-floating form-floating-outline">
                                                    <input id="couponId<%=coupon._id%>" name="couponId" class="form-control" type="text" placeholder="Coupon ID" value="<%=coupon.couponId%>">
                                                    <label class="errMsg" for="couponId<%=coupon._id%>">Coupon ID</label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-12">
                                            <div class="form-floating form-floating-outline">
                                                <input type="number" id="discount<%=coupon._id%>" name="discount" class="form-control" placeholder="Discount" value="<%=coupon.discount%>">
                                                <label class="errMsg" for="discount<%=coupon._id%>">Discount</label>
                                            </div>
                                        </div>
                                        <div class="col-12">
                                            <div class="form-floating form-floating-outline">
                                                <textarea id="description<%=coupon._id%>" name="description" class="form-control" placeholder="Description"><%=coupon.description%></textarea>
                                                <label class="errMsg" for="description<%=coupon._id%>">Description</label>
                                            </div>
                                        </div>
                                        <div class="col-12">
                                            <div class="form-floating form-floating-outline">
                                                <input type="date" id="expiryDate<%=coupon._id%>" name="expiryDate" class="form-control" value="<%=coupon.expiryDate%>">
                                                <label class="errMsg" for="expiryDate<%=coupon._id%>">Expiry Date</label>
                                            </div>
                                        </div>
                                        <div class="col-12">
                                            <div class="form-floating form-floating-outline">
                                                <input type="number" id="min_purchase_amount<%=coupon._id%>" name="min_purchase_amount" class="form-control" placeholder="Minimum Purchase Amount" value="<%=coupon.min_purchase_amount%>">
                                                <label class="errMsg" for="min_purchase_amount<%=coupon._id%>">Minimum Purchase Amount</label>
                                            </div>
                                        </div>
                                        <div class="col-12">
                                            <div class="form-floating form-floating-outline">
                                                <input type="number" id="max_amount<%=coupon._id%>" name="max_amount" class="form-control" placeholder="Maximum Amount" value="<%=coupon.max_amount%>">
                                                <label class="errMsg" for="max_amount<%=coupon._id%>">Maximum Amount</label>
                                            </div>
                                        </div>
                                        <div class="col-12">
                                            <div class="form-floating form-floating-outline">
                                                <div class="form-check">
                                                    <input class="form-check-input" type="checkbox" id="is_active<%=coupon._id%>" name="is_active" <%=coupon.is_active ? 'checked' : ''%>>
                                                    <label class="form-check-label" for="is_active<%=coupon._id%>">Active</label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-12 text-center">
                                            <button type="submit" class="btn btn-primary me-3 waves-effect waves-light">Update</button>
                                            <button type="button" class="btn btn-outline-secondary waves-effect" data-bs-dismiss="modal" aria-label="Close">Cancel</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                    <%})%>

                    

                 
                <script>


                document.addEventListener('DOMContentLoaded', function () {
                    document.getElementById('addNewCouponForm').addEventListener('submit', async function (e) {
                    e.preventDefault();

                    const couponId = document.getElementById('couponId').value.trim();
                    const discount = document.getElementById('discount').value.trim();
                    const description = document.getElementById('description').value.trim();
                    const expiryDate = document.getElementById('expiryDate').value.trim();
                    const minPurchaseAmount = document.getElementById('min_purchase_amount').value.trim();
                    const maxAmount = document.getElementById('max_amount').value.trim();
                    const isActive = document.getElementById('is_active').checked;

                    addCoupon(couponId, discount, description, expiryDate, minPurchaseAmount, maxAmount, isActive);
                });

                const setError = (element, message) => {
                    const formGroup = element.parentElement;
                    const errorDisplay = formGroup.querySelector('.errMsg');
                    if (errorDisplay) {
                        errorDisplay.innerText = message;
                        element.classList.add('error');
                        errorDisplay.classList.add('error');
                        element.classList.remove('success');
                        errorDisplay.classList.remove('success');
                    }
                }

                const setSuccess = (element, message) => {
                    const formGroup = element.parentElement;
                    const errorDisplay = formGroup.querySelector('.errMsg');
                    if (errorDisplay) {
                        errorDisplay.innerText = message;
                        element.classList.add('success');
                        errorDisplay.classList.add('success');
                        element.classList.remove('error');
                        errorDisplay.classList.remove('error');
                    }
                }

                const addCoupon = async (couponId, discount, description, expiryDate, minPurchaseAmount, maxAmount, isActive) => {
                    let isValid = true;
                    const nameRegex = /^[a-zA-Z0-9]+$/;
                    


                    if (couponId === '') {
                        isValid = false;
                        setError(document.getElementById('couponId'), 'Enter Coupon ID');
                    } else if (!nameRegex.test(couponId)) {
                        setError(document.getElementById('couponId'), 'Coupon Name should only contain letters and numbers');
                    isValid = false;
                    } else if (couponId.length < 4) {
                        setError(document.getElementById('couponId'), 'Coupon Name should minimum 3 letters');
                        isValid = false;
                    } else {
                        setSuccess(document.getElementById('couponId'), 'Coupon ID');
                    }

                    if (discount === '') {
                        isValid = false;
                        setError(document.getElementById('discount'), 'Enter Discount Amount');
                    } else if (discount < 0) {
                        isValid = false;
                        setError(document.getElementById('discount'), 'Discount should be more than 0');
                    } else if (discount > 100) {
                        isValid = false;
                        setError(document.getElementById('discount'), 'Discount should be 100 or less');
                    } else {
                        setSuccess(document.getElementById('discount'), 'Discount');
                    }

                    if (description === '') {
                        isValid = false;
                        setError(document.getElementById('description'), 'Enter Description');
                    } else if (description.length < 3) {
                        isValid = false;
                        setError(document.getElementById('description'), 'Description should be more than 2 letters');
                    } else {
                        setSuccess(document.getElementById('description'), 'Description');
                    }

                    if (expiryDate === '') {
                        isValid = false;
                        setError(document.getElementById('expiryDate'), 'Select Expiry Date');
                    } else {
                        const today = new Date();
                        today.setHours(0, 0, 0, 0); 
                        const selectedDate = new Date(expiryDate);

                        if (selectedDate <= today) {
                            isValid = false;
                            setError(document.getElementById('expiryDate'), 'Expiry date must be a future date');
                        } else {
                            setSuccess(document.getElementById('expiryDate'), 'Expiry Date');
                        }
                    }

                    if (minPurchaseAmount === '') {
                        isValid = false;
                        setError(document.getElementById('min_purchase_amount'), 'Enter Minimum Purchase Amount');
                    } else if (minPurchaseAmount < 0) {
                        isValid = false;
                        setError(document.getElementById('min_purchase_amount'), 'Minimum Purchase Amount should be 0 or more');
                    } else {
                        setSuccess(document.getElementById('min_purchase_amount'), 'Minimum Purchase Amount');
                    }

                    if (maxAmount !== '') {
                        if (maxAmount < 0) {
                            isValid = false;
                            setError(document.getElementById('max_amount'), 'Maximum Amount should be 0 or more');
                        } else if (parseFloat(maxAmount) <= parseFloat(minPurchaseAmount)) {
                            isValid = false;
                            setError(document.getElementById('max_amount'), 'Maximum Amount should be greater than Minimum Purchase Amount');
                        } else {
                            setSuccess(document.getElementById('max_amount'), 'Maximum Amount');
                        }
                    } else {
                        setSuccess(document.getElementById('max_amount'), 'Maximum Amount');
                    }

                    if (!isValid) {
                        return;
                    }

                    const formData = {
                        couponId,
                        discount: parseFloat(discount),
                        description,
                        expiryDate,
                        min_purchase_amount: parseFloat(minPurchaseAmount),
                        max_amount: maxAmount ? parseFloat(maxAmount) : undefined,
                        is_active: isActive
                    };

                    try {
                        const response = await fetch('/admin/coupons/addCoupon', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(formData)
                        });
                        const data = await response.json();
                        if (data.success) {
                            Swal.fire({
                                title: 'Success!',
                                text: data.message,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = data.redirectUrl;
                                }
                            });
                            $('#addCoupon').modal('hide');
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: data.message,
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    } catch (error) {
                        Swal.fire({
                            title: 'Error!',
                            text: error.message,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                }



                const editCouponForms = document.querySelectorAll('.edit-coupon-form');

                editCouponForms.forEach(form => {
                    form.addEventListener('submit', function (event) {
                        event.preventDefault();
                        const couponID = this.getAttribute('data-coupon-id');

                        const couponId = document.getElementById(`couponId${couponID}`);
                        const discount = document.getElementById(`discount${couponID}`);
                        const description = document.getElementById(`description${couponID}`);
                        const expiryDate = document.getElementById(`expiryDate${couponID}`);
                        const minPurchaseAmount = document.getElementById(`min_purchase_amount${couponID}`);
                        const maxAmount = document.getElementById(`max_amount${couponID}`);
                        const isActive = document.getElementById(`is_active${couponID}`);

                        editCouponForm(
                           couponID, couponId, discount, description, expiryDate,
                            minPurchaseAmount, maxAmount, isActive
                        );
                    });
                });
                const deleteButtons = document.querySelectorAll('.delete-coupon');
                        deleteButtons.forEach(button => {
                            button.addEventListener('click', function (event) {
                                event.preventDefault();
                                const couponId = this.getAttribute('data-coupon-id');
                                deleteOffer(couponId);
                            });
                        });

                const editCouponForm = async (
                    couponID,couponId, discount, description, expiryDate,
                    minPurchaseAmount, maxAmount, isActive
                ) => {
                    const couponIdValue = couponId.value.trim();
                    const discountValue = discount.value.trim();
                    const descriptionValue = description.value.trim();
                    const expiryDateValue = expiryDate.value.trim();
                    const minPurchaseAmountValue = minPurchaseAmount.value.trim();
                    const maxAmountValue = maxAmount.value.trim();
                    const isActiveValue = isActive.checked;

                    let isValid = true;
                    const nameRegex = /^[a-zA-Z0-9]+$/;
                


                    if (couponIdValue === '') {
                        isValid = false;
                        setError(couponId, 'Enter Coupon ID');
                    }else if (!nameRegex.test(couponIdValue)) {
                        setError(couponId, 'Coupon Name should only contain letters and numbers');
                        isValid = false;
                    }else if (couponIdValue.length < 4) {
                        setError(couponId, 'Coupon Name should minimum 3 letters');
                        isValid = false;
                    } else {
                        setSuccess(couponId, 'Coupon ID');
                    }

                    if (discountValue === '') {
                        isValid = false;
                        setError(discount, 'Enter Discount Amount');
                    } else if (discountValue < 0) {
                        isValid = false;
                        setError(discount, 'Discount should be more than 0');
                    } else if (discountValue > 100) {
                        isValid = false;
                        setError(discount, 'Discount should be 100 or less');
                    } else {
                        setSuccess(discount, 'Discount');
                    }

                    if (descriptionValue === '') {
                        isValid = false;
                        setError(description, 'Enter Description');
                    } else if (descriptionValue.length < 3) {
                        isValid = false;
                        setError(description, 'Description should be more than 2 letters');
                    } else {
                        setSuccess(description, 'Description');
                    }
                    if (expiryDateValue === '') {
                        isValid = false;
                        setError(expiryDate, 'Select Expiry Date');
                    } else {
                        const today = new Date();
                        today.setHours(0, 0, 0, 0); 
                        const selectedDate = new Date(expiryDateValue);
                        if (selectedDate <= today) {
                            isValid = false;
                            setError(expiryDate, 'Expiry date must be a future date');
                        } else {
                            setSuccess(expiryDate, 'Expiry Date');
                        }
                       
                    }
                    if (minPurchaseAmountValue === '') {
                        isValid = false;
                        setError(minPurchaseAmount, 'Enter Minimum Purchase Amount');
                    } else if (minPurchaseAmountValue < 0) {
                        isValid = false;
                        setError(minPurchaseAmount, 'Minimum Purchase Amount should be 0 or more');
                    } else {
                        setSuccess(minPurchaseAmount, 'Minimum Purchase Amount');
                    }

                    if (maxAmountValue !== '' && maxAmountValue < 0) {
                        isValid = false;
                        setError(maxAmount, 'Maximum Amount should be 0 or more');
                    } else if (parseFloat(maxAmountValue) <= parseFloat(minPurchaseAmountValue)) {
                            isValid = false;
                            setError(maxAmount, 'Maximum Amount should be greater than Minimum Purchase Amount');
                     } else {
                        setSuccess(maxAmount, 'Maximum Amount');
                    }

                    if (!isValid) {
                        return;
                    }

                    try {
                        const response = await fetch('/admin/updateCoupon', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                id:couponID,
                                couponId: couponIdValue,
                                discount: discountValue,
                                description: descriptionValue,
                                expiryDate: expiryDateValue,
                                min_purchase_amount: minPurchaseAmountValue,
                                max_amount: maxAmountValue,
                                is_active: isActiveValue
                            })
                        });
                        const data = await response.json();
                        if (data.success) {
                            Swal.fire({
                                title: 'Success!',
                                text: data.message,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = data.redirectUrl;
                                }
                                
                            });
                            $('.editmodal').modal('hide');
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: data.message,
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    } catch (error) {
                        console.error('Error during coupon update:', error);
                    }
                }


                async function deleteOffer(couponId) {

                const result = await Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                });

                if (result.isConfirmed) {
                    try {
                        const response = await fetch('/admin/deleteCoupon', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ id: couponId })
                        });

                        const data = await response.json();

                        if (data.success) {
                            Swal.fire(
                                'Deleted!',
                                'Your Offer has been deleted.',
                                'success'
                            ).then(() => {

                                location.reload();
                            });
                        } else {
                            Swal.fire(
                                'Error!',
                                data.message,
                                'error'
                            );
                        }
                    } catch (error) {
                        console.error('Error during Offer deletion:', error);
                        Swal.fire(
                            'Error!',
                            'An error occurred while deleting the Offer.',
                            'error'
                        );
                    }
                }
                }
            });


        </script>
                <%- include ('../../layout/adminlayout/footer.ejs') %>